# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-03-06 16:04
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alias',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('handle', models.CharField(max_length=250, unique=True, verbose_name='Nickname')),
                ('model_name', models.CharField(choices=[('Undefined', 'Undefined'), ('Analyzer', 'Analyzer'), ('IndexProfile', 'IndexProfile'), ('Filter', 'Filter'), ('Resource', 'Resource'), ('SearchModel', 'SearchModel'), ('Source', 'Source'), ('Tokenizer', 'Tokenizer')], default='Undefined', max_length=30, verbose_name='Model')),
            ],
        ),
        migrations.CreateModel(
            name='Analyzer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='Name')),
                ('config', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Configuration')),
                ('reserved', models.BooleanField(default=False, verbose_name='Reserved')),
                ('alias', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='onegeo_api.Alias')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CeleryTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=150, unique=True)),
                ('header_location', models.CharField(max_length=150)),
                ('status', models.CharField(blank=True, max_length=20)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='Name')),
                ('config', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Configuration')),
                ('reserved', models.BooleanField(default=False, verbose_name='Reserved')),
                ('alias', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='onegeo_api.Alias')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndexProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('clmn_properties', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Columns')),
                ('reindex_frequency', models.CharField(choices=[('monthly', 'monthly'), ('weekly', 'weekly'), ('daily', 'daily')], default='monthly', max_length=250, verbose_name='Re-indexation frequency')),
                ('alias', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='onegeo_api.Alias', verbose_name='Nickname')),
            ],
            options={
                'verbose_name': 'Indexation Profile',
                'verbose_name_plural': 'Indexation Profiles',
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('columns', django.contrib.postgres.fields.jsonb.JSONField(verbose_name='Columns')),
                ('alias', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='onegeo_api.Alias', verbose_name='Nickname')),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
            },
        ),
        migrations.CreateModel(
            name='SearchModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('config', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Query DSL')),
                ('alias', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='onegeo_api.Alias', verbose_name='Nickname')),
                ('index_profiles', models.ManyToManyField(to='onegeo_api.IndexProfile', verbose_name='Indexation profiles')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Search Model',
                'verbose_name_plural': 'Search Models',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('protocol', models.CharField(choices=[('csw', 'OGC:CSW'), ('wfs', 'OGC:WFS')], max_length=250, verbose_name='Protocol')),
                ('uri', models.CharField(max_length=2048, verbose_name='URI')),
                ('alias', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='onegeo_api.Alias', verbose_name='Nickname')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Source',
                'verbose_name_plural': 'Sources',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True, verbose_name='Start')),
                ('stop_date', models.DateTimeField(blank=True, null=True, verbose_name='Stop')),
                ('success', models.NullBooleanField(verbose_name='Success')),
                ('description', models.CharField(max_length=250, verbose_name='Description')),
                ('alias', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='onegeo_api.Alias')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tokenizer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='Name')),
                ('config', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Configuration')),
                ('reserved', models.BooleanField(default=False, verbose_name='Reserved')),
                ('alias', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='onegeo_api.Alias')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='resource',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onegeo_api.Source', verbose_name='Source'),
        ),
        migrations.AddField(
            model_name='resource',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='indexprofile',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='onegeo_api.Resource', verbose_name='Resource'),
        ),
        migrations.AddField(
            model_name='indexprofile',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='analyzer',
            name='filters',
            field=models.ManyToManyField(to='onegeo_api.Filter'),
        ),
        migrations.AddField(
            model_name='analyzer',
            name='tokenizer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='onegeo_api.Tokenizer'),
        ),
        migrations.AddField(
            model_name='analyzer',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
    ]
